// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/server/server.go

// Package mock_server is a generated GoMock package.
package mock_server

import (
	gomock "github.com/golang/mock/gomock"
	net "net"
	reflect "reflect"
)

// MockRequestNotifier is a mock of RequestNotifier interface
type MockRequestNotifier struct {
	ctrl     *gomock.Controller
	recorder *MockRequestNotifierMockRecorder
}

// MockRequestNotifierMockRecorder is the mock recorder for MockRequestNotifier
type MockRequestNotifierMockRecorder struct {
	mock *MockRequestNotifier
}

// NewMockRequestNotifier creates a new mock instance
func NewMockRequestNotifier(ctrl *gomock.Controller) *MockRequestNotifier {
	mock := &MockRequestNotifier{ctrl: ctrl}
	mock.recorder = &MockRequestNotifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequestNotifier) EXPECT() *MockRequestNotifierMockRecorder {
	return m.recorder
}

// Notify mocks base method
func (m *MockRequestNotifier) Notify(arg0 net.Addr, arg1 []byte, arg2 map[string]interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Notify", arg0, arg1, arg2)
}

// Notify indicates an expected call of Notify
func (mr *MockRequestNotifierMockRecorder) Notify(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Notify", reflect.TypeOf((*MockRequestNotifier)(nil).Notify), arg0, arg1, arg2)
}

// MockStartNotifier is a mock of StartNotifier interface
type MockStartNotifier struct {
	ctrl     *gomock.Controller
	recorder *MockStartNotifierMockRecorder
}

// MockStartNotifierMockRecorder is the mock recorder for MockStartNotifier
type MockStartNotifierMockRecorder struct {
	mock *MockStartNotifier
}

// NewMockStartNotifier creates a new mock instance
func NewMockStartNotifier(ctrl *gomock.Controller) *MockStartNotifier {
	mock := &MockStartNotifier{ctrl: ctrl}
	mock.recorder = &MockStartNotifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStartNotifier) EXPECT() *MockStartNotifierMockRecorder {
	return m.recorder
}

// Notify mocks base method
func (m *MockStartNotifier) Notify() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Notify")
}

// Notify indicates an expected call of Notify
func (mr *MockStartNotifierMockRecorder) Notify() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Notify", reflect.TypeOf((*MockStartNotifier)(nil).Notify))
}
